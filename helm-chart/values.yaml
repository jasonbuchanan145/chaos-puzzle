images:
  repository: us-central1-docker.pkg.dev/google-samples/microservices-demo
  tag: ''
serviceAccounts:
  create: true
  annotations: {}
  annotationsOnlyForCartservice: false
networkPolicies:
  create: false
sidecars:
  create: false
authorizationPolicies:
  create: false
opentelemetryCollector:
  create: true
  name: opentelemetry-collector
  image:
    repository: otel/opentelemetry-collector-contrib
    tag: 0.104.0
  opensearch:
    endpoints:
      - "http://opensearch:9200"
    tlsInsecure: true
    tracesIndex: "otel-v1-apm-span"
    serviceMapEnabled: true
    serviceMapIndex: "otel-v1-apm-service-map"

googleCloudOperations:
  profiler: false
  tracing: true
  metrics: true
seccompProfile:
  enable: false
  type: RuntimeDefault
securityContext:
  enable: true
adService:
  create: true
  name: adservice
  resources:
    requests:
      cpu: 200m
      memory: 180Mi
    limits:
      cpu: 300m
      memory: 300Mi
  replicas: 0
cartService:
  create: true
  name: cartservice
  resources:
    requests:
      cpu: 200m
      memory: 128Mi
    limits:
      cpu: 300m
      memory: 256Mi
  replicas: 1
  otel:
    enabled: true
checkoutService:
  create: true
  name: checkoutservice
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi
  replicas: 1
  otel:
    enabled: true
currencyService:
  create: true
  name: currencyservice
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  replicas: 0
emailService:
  create: true
  name: emailservice
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi
  replicas: 0
frontend:
  create: true
  name: frontend
  externalService: true
  cymbalBranding: false
  platform: local
  singleSharedSession: false
  virtualService:
    create: false
    hosts:
      - '*'
    gateway:
      name: asm-ingressgateway
      namespace: asm-ingress
      labelKey: asm
      labelValue: ingressgateway
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi
  replicas: 1
  otel:
    enabled: true
loadGenerator:
  create: true
  name: loadgenerator
  checkFrontendInitContainer: true
  resources:
    requests:
      cpu: 300m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi
  replicas: 1
  otel:
    enabled: true
paymentService:
  create: true
  name: paymentservice
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  replicas: 1
  otel:
    enabled: true
productCatalogService:
  create: true
  name: productcatalogservice
  extraLatency: ''
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi
  replicas: 1
  otel:
    enabled: true
recommendationService:
  create: true
  name: recommendationservice
  resources:
    requests:
      cpu: 100m
      memory: 220Mi
    limits:
      cpu: 200m
      memory: 450Mi
  replicas: 0
shippingService:
  create: true
  name: shippingservice
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi
  replicas: 1
  otel:
    enabled: true
cartDatabase:
  type: redis
  connectionString: redis-cart:6379
  inClusterRedis:
    create: true
    name: redis-cart
    publicRepository: true
    replicas: 1
  externalRedisTlsOrigination:
    enable: false
    name: exernal-redis-tls-origination
    endpointAddress: ''
    endpointPort: ''
    certificate: ''
dataprepper:
  enableDefaultPipelines: false        # keep the demo pipeline OFF
  pipelineConfig:
    enabled: true
    config:
      otel-traces:
        workers: 2
        source:
          otel_trace_source:
            ssl: false
            port: 21890               # OTLP gRPC from the OTel Collector
        buffer:
          bounded_blocking:
            buffer_size: 1024
            batch_size: 256
        sink:
          - opensearch:
              hosts: ["http://opensearch-cluster-master:9200"]
              index_type: trace-analytics-raw
          - opensearch:
              hosts: ["http://opensearch-cluster-master:9200"]
              index_type: trace-analytics-service-map




otel:
  mode: deployment
  image:
    repository: otel/opentelemetry-collector-contrib
    tag: "0.135.0"
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
    processors:
      batch: {}
    exporters:
      otlp:
        endpoint: data-prepper:21890
        tls:
          insecure: true
      debug:
        verbosity: normal
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlp, debug]
shoppingAssistantService:
  create: false
  name: shoppingassistantservice
observability:
  enabled: true
  opensearch:
    enabled: true
    replicas: 1
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1000m
        memory: 2Gi
  logstash:
    enabled: true
    replicas: 1
    resources:
      requests:
        cpu: 100m
        memory: 512Mi
      limits:
        cpu: 200m
        memory: 1Gi
  dashboards:
    enabled: true
os:
  singleNode: true
  replicas: 1
  extraEnvs:
    - name: "DISABLE_INSTALL_DEMO_CONFIG"
      value: "true"
    - name: "DISABLE_SECURITY_PLUGIN"
      value: "true"
  opensearchJavaOpts: "-Xms512m -Xmx512m"
  # these ensure it listens and service wiring is correct
  config:
    opensearch.yml: |
      cluster.name: failure-puzzle
      discovery.type: single-node
      network.host: 0.0.0.0
      http.port: 9200
      plugins.security.disabled: true
      bootstrap.memory_lock: false

osd:
  opensearchHosts: "http://os-opensearch:9200"
  extraEnvs:
    - name: DISABLE_SECURITY_DASHBOARDS_PLUGIN
      value: "true"
  service:
    type: LoadBalancer

